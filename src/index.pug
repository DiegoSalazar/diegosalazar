doctype html
html(lang="en" class="dark")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title= `${cv.basics.name} | ${cv.basics.label}`
    link(rel="stylesheet", href="styles.css")
    link(rel="preconnect", href="https://fonts.googleapis.com")
    link(rel="preconnect", href="https://fonts.gstatic.com", crossorigin)
    link(href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&family=Montserrat:wght@700&display=swap", rel="stylesheet")
    style.
      html { scroll-behavior: smooth; }
      .font-montserrat { font-family: 'Montserrat', 'Inter', sans-serif; }
      /* Subtle, refined architectural draft paper hero background with major and minor gridlines */
      header#home {
        position: relative;
        background-image:
          /* SVG: major grid every 32px, minor every 8px, subtle dots at major intersections */
          url('data:image/svg+xml;utf8,<svg width="64" height="64" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg"><g opacity="0.06"><path d="M8 0v64M16 0v64M24 0v64M32 0v64M40 0v64M48 0v64M56 0v64M0 8h64M0 16h64M0 24h64M0 32h64M0 40h64M0 48h64M0 56h64" stroke="%23b6d0f7" stroke-width="0.4"/></g><g opacity="0.13"><path d="M0 0h64v64H0V0M32 0v64M0 32h64" stroke="%23b6d0f7" stroke-width="0.7"/></g><g opacity="0.10"><circle cx="32" cy="32" r="0.7" fill="%23b6d0f7"/><circle cx="0" cy="0" r="0.7" fill="%23b6d0f7"/><circle cx="0" cy="32" r="0.7" fill="%23b6d0f7"/><circle cx="32" cy="0" r="0.7" fill="%23b6d0f7"/><circle cx="32" cy="64" r="0.7" fill="%23b6d0f7"/><circle cx="64" cy="32" r="0.7" fill="%23b6d0f7"/><circle cx="64" cy="0" r="0.7" fill="%23b6d0f7"/><circle cx="0" cy="64" r="0.7" fill="%23b6d0f7"/><circle cx="64" cy="64" r="0.7" fill="%23b6d0f7"/></g></svg>'),
          linear-gradient(to bottom, #1e3a8a 0%, #1e40af99 60%, #0f172a 100%);
        background-size: auto, cover;
        background-repeat: repeat, no-repeat;
        background-position: center, center;
        /* Smooth fade to main bg */
        mask-image: linear-gradient(to bottom, black 80%, transparent 100%);
        -webkit-mask-image: linear-gradient(to bottom, black 80%, transparent 100%);
      }
      /* Subtle, refined site-wide draft paper background with major and minor gridlines */
      body {
        background-color: #0f172a;
        background-image:
          url('data:image/svg+xml;utf8,<svg width="64" height="64" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg"><g opacity="0.025"><path d="M8 0v64M16 0v64M24 0v64M32 0v64M40 0v64M48 0v64M56 0v64M0 8h64M0 16h64M0 24h64M0 32h64M0 40h64M0 48h64M0 56h64" stroke="%23b6d0f7" stroke-width="0.4"/></g><g opacity="0.06"><path d="M0 0h64v64H0V0M32 0v64M0 32h64" stroke="%23b6d0f7" stroke-width="0.7"/></g><g opacity="0.04"><circle cx="32" cy="32" r="0.7" fill="%23b6d0f7"/><circle cx="0" cy="0" r="0.7" fill="%23b6d0f7"/><circle cx="0" cy="32" r="0.7" fill="%23b6d0f7"/><circle cx="32" cy="0" r="0.7" fill="%23b6d0f7"/><circle cx="32" cy="64" r="0.7" fill="%23b6d0f7"/><circle cx="64" cy="32" r="0.7" fill="%23b6d0f7"/><circle cx="64" cy="0" r="0.7" fill="%23b6d0f7"/><circle cx="0" cy="64" r="0.7" fill="%23b6d0f7"/><circle cx="64" cy="64" r="0.7" fill="%23b6d0f7"/></g></svg>');
        background-size: auto;
        background-repeat: repeat;
        background-attachment: fixed;
      }

  body(class="bg-gray-900 text-gray-100 font-sans")
    //- Sticky Section Header (Animated, only for < 1536px and only after hero is out of view)
    div#sticky-section-header(class="fixed top-0 left-0 w-full z-40 pointer-events-none transition-all duration-500 ease-in-out opacity-0 translate-y-[-100%] bg-gradient-to-b from-blue-900/90 to-transparent backdrop-blur-md shadow-lg 2xl:hidden")
      h2(class="text-xl md:text-2xl font-bold tracking-tight text-white px-6 py-3 mx-auto max-w-4xl transition-all duration-500 ease-in-out")
        |
    //- Table of Contents (Wide screens only, only after hero is out of view)
    aside#toc(class="hidden 2xl:flex flex-col fixed top-32 left-0 z-30 w-60 px-4 py-6 h-[70vh] bg-gradient-to-br from-gray-900/80 via-gray-900/60 to-transparent border-r-2 border-gray-800/60 shadow-none rounded-r-xl gap-2 opacity-0 pointer-events-none transition-opacity duration-500 backdrop-blur-md invisible" style="animation:none;")
      h3(class="text-base font-bold text-blue-400 mb-3 tracking-wide uppercase opacity-80") Table of Contents
      ul(class="flex flex-col gap-1 text-gray-300 text-base font-medium")
        li
          a(href="#about" data-section="about" class="toc-link px-2 py-1 rounded transition-colors duration-300 relative") About Me
        li
          a(href="#experience" data-section="experience" class="toc-link px-2 py-1 rounded transition-colors duration-300 relative") Experience
        li
          a(href="#projects" data-section="projects" class="toc-link px-2 py-1 rounded transition-colors duration-300 relative") Personal Projects
        li
          a(href="#volunteer" data-section="volunteer" class="toc-link px-2 py-1 rounded transition-colors duration-300 relative") Volunteer
        li
          a(href="#testimonials" data-section="testimonials" class="toc-link px-2 py-1 rounded transition-colors duration-300 relative") Testimonials
        li
          a(href="#contact" data-section="contact" class="toc-link px-2 py-1 rounded transition-colors duration-300 relative") Contact
    //- Header & Hero Section
    header#home(class="bg-gradient-to-b from-blue-900 via-blue-800/60 to-gray-900 bg-no-repeat bg-cover")
      div(class="container mx-auto px-6 py-20")
        div(class="flex flex-col items-center text-center")
          img(src=cv.basics.image, alt="Profile Picture", class="w-32 h-32 md:w-40 md:h-40 rounded-full mb-6 border-4 border-gray-700 shadow-lg object-cover")
          h1(class="text-4xl md:text-6xl font-bold tracking-tight drop-shadow-xl font-montserrat")= cv.basics.name
          h2(class="text-xl md:text-2xl text-gray-400 mt-6 drop-shadow")= cv.basics.label
          if cv.basics.tagline
            p(class="text-lg text-gray-500 mt-4 italic drop-shadow-sm")= cv.basics.tagline
          nav(class="mt-8 flex flex-wrap justify-center gap-4 drop-shadow-md")
            a(href="#about" class="relative text-gray-300 hover:text-white transition-colors px-3 py-1 after:absolute after:left-0 after:bottom-0 after:w-0 after:h-0.5 after:bg-blue-400 after:transition-all after:duration-300 hover:after:w-full focus:after:w-full active:after:w-full after:rounded-full") About
            a(href="#experience" class="relative text-gray-300 hover:text-white transition-colors px-3 py-1 after:absolute after:left-0 after:bottom-0 after:w-0 after:h-0.5 after:bg-blue-400 after:transition-all after:duration-300 hover:after:w-full focus:after:w-full active:after:w-full after:rounded-full") Experience
            a(href="#projects" class="relative text-gray-300 hover:text-white transition-colors px-3 py-1 after:absolute after:left-0 after:bottom-0 after:w-0 after:h-0.5 after:bg-blue-400 after:transition-all after:duration-300 hover:after:w-full focus:after:w-full active:after:w-full after:rounded-full") Projects
            a(href="#volunteer" class="relative text-gray-300 hover:text-white transition-colors px-3 py-1 after:absolute after:left-0 after:bottom-0 after:w-0 after:h-0.5 after:bg-blue-400 after:transition-all after:duration-300 hover:after:w-full focus:after:w-full active:after:w-full after:rounded-full") Volunteer
            a(href="#testimonials" class="relative text-gray-300 hover:text-white transition-colors px-3 py-1 after:absolute after:left-0 after:bottom-0 after:w-0 after:h-0.5 after:bg-blue-400 after:transition-all after:duration-300 hover:after:w-full focus:after:w-full active:after:w-full after:rounded-full") Testimonials
            a(href="#contact" class="relative text-gray-300 hover:text-white transition-colors px-3 py-1 after:absolute after:left-0 after:bottom-0 after:w-0 after:h-0.5 after:bg-blue-400 after:transition-all after:duration-300 hover:after:w-full focus:after:w-full active:after:w-full after:rounded-full") Contact

    //- Main Content Wrapper
    div(class="main-content-wrapper container mx-auto px-4 sm:px-6 py-20 transition-all duration-500" style="max-width:1100px;margin-left:auto;margin-right:auto;" 2xl:style="max-width:1100px;margin-left:calc(15rem + 2vw);margin-right:auto;")
      div(class="lg:grid lg:grid-cols-3 lg:gap-12")
        //- Left/Main Column
        main(class="lg:col-span-2")
          //- About Section
          section#about
            h2(class="text-3xl md:text-4xl font-bold tracking-tighter mb-6") About Me
            div(class="prose prose-invert prose-lg max-w-none text-left")
              each para in cv.basics.summary
                p= para

          //- Experience Section
          section#experience(class="mt-20")
            h2(class="text-3xl md:text-4xl font-bold tracking-tighter mb-12") Work Experience
            div(class="relative border-l-2 border-gray-700 pl-8")
              each job, index in cv.work
                div(class="mb-12")
                  span(class="absolute -left-3 flex items-center justify-center w-6 h-6 bg-blue-600 rounded-full")
                    span(class="w-3 h-3 bg-white rounded-full")
                  h3(class="text-2xl font-bold")= job.position
                  p(class="text-lg text-gray-400")= `${job.name} | ${job.startDate} - ${job.endDate}`
                  if job.summary
                    p(class="mt-2 text-gray-300")= job.summary
                  if job.highlights
                    ul(class="list-disc list-inside mt-2 text-gray-300")
                      each highlight in job.highlights
                        li= highlight

          //- Projects Section
          section#projects(class="mt-20")
            h2(class="text-3xl md:text-4xl font-bold tracking-tighter mb-12") Personal Projects
            div(class="grid grid-cols-1 md:grid-cols-2 gap-8")
              each project in cv.projects
                div(class="bg-gray-800 rounded-lg overflow-hidden transform transition-transform hover:scale-105 shadow-lg flex flex-col")
                  if project.images && project.images.length > 0
                    img(src=project.images[0], alt=project.name, class="w-full h-48 object-cover")
                  div(class="p-6 flex flex-col flex-grow")
                    h3(class="text-xl font-bold")= project.name
                    p(class="text-gray-400 mt-2 flex-grow")= project.summary
                    div(class="mt-4")
                      if project.url
                        a(href=project.url, target="_blank", rel="noopener noreferrer", class="text-blue-400 hover:underline mr-4") View Project
                      if project.githubUrl
                        a(href=project.githubUrl, target="_blank", rel="noopener noreferrer", class="text-blue-400 hover:underline") View on GitHub

          //- Volunteer Section
          if cv.volunteer && cv.volunteer.length
            section#volunteer(class="mt-20")
              h2(class="text-3xl md:text-4xl font-bold tracking-tighter mb-12") Volunteer
              div(class="space-y-8")
                each vol in cv.volunteer
                  div(class="bg-gray-800 p-6 rounded-lg shadow-lg")
                    h3(class="text-2xl font-bold mb-2 flex items-center gap-2")
                      if vol.url
                        a(href=vol.url, target="_blank", rel="noopener noreferrer", class="text-blue-400 hover:underline")= vol.organization
                      else
                        = vol.organization
                      if vol.position
                        span(class="text-base text-gray-400 font-medium ml-2")= `– ${vol.position}`
                    if vol.summary
                      p(class="text-gray-300 mt-2")= vol.summary

          //- Testimonials Section
          section#testimonials(class="mt-20")
            h2(class="text-3xl md:text-4xl font-bold tracking-tighter mb-12") Testimonials
            div(class="space-y-8")
              each ref in cv.references
                div(class="bg-gray-800 p-6 rounded-lg shadow-lg")
                  blockquote(class="border-l-4 border-blue-500 pl-4")
                    p(class="text-gray-300 italic")= ref.reference
                    footer(class="mt-4")
                      cite(class="font-bold not-italic")= ref.name
                      if ref.title
                        span(class="text-gray-400")= `, ${ref.title}`

        //- Right/Sidebar Column
        aside(class="lg:col-span-1 mt-20 lg:mt-0")
          //- Skills Section
          section#skills
            h2(class="text-2xl font-bold tracking-tight mb-6") Skills
            if cv.skills.summary
              p(class="text-gray-400 mb-6")= cv.skills.summary
            div(class="flex flex-wrap gap-2")
              each skill in cv.skills.sets
                - let colorClass = '';
                if (skill.name === 'Typescript')
                  - colorClass = 'bg-blue-700 text-white';
                else if (skill.name === 'React')
                  - colorClass = 'bg-cyan-600 text-white';
                else if (skill.name === 'Python')
                  - colorClass = 'bg-yellow-400 text-gray-900';
                else if (skill.name === 'Ruby on Rails')
                  - colorClass = 'bg-red-600 text-white';
                else if (skill.name === 'HTML5, CSS3, SASS')
                  - colorClass = 'bg-pink-500 text-white';
                else if (skill.name === 'LLMs/Prompt Engineering')
                  - colorClass = 'bg-purple-700 text-white';
                else if (skill.name === 'PostgreSQL, MySQL')
                  - colorClass = 'bg-emerald-700 text-white';
                else if (skill.name === 'Elixir')
                  - colorClass = 'bg-violet-700 text-white';
                else
                  - colorClass = 'bg-gray-700 text-white';
                span(class=`${colorClass} px-3 py-1 rounded-full text-sm shadow-md font-semibold transition-all duration-200`) #{skill.name}
            if cv.meta.resumeUrl
              div(class="mt-7")
                a(href=cv.meta.resumeUrl, target="_blank", class="bg-blue-600 text-white font-bold py-3 px-6 rounded-lg hover:bg-blue-700 transition-colors text-lg inline-block shadow-lg") Download Resume
            div(class="mt-8 flex flex-wrap items-center gap-4")
              each profile in cv.basics.profiles
                if profile.network === 'Stack Overflow' && profile.flair
                  a(href=profile.url, target="_blank")
                    img(src=profile.flair, alt="Stack Overflow Flair")
                if profile.network === 'Codewars' && profile.badge
                  a(href=profile.url, target="_blank")
                    img(src=profile.badge, alt="Codewars Badge")

          //- Education
          section#education(class="mt-12")
            h2(class="text-2xl font-bold tracking-tight mb-6") Education
            div(class="space-y-4")
              each course in cv.education
                div
                  h3(class="font-semibold")= course.area
                  p(class="text-gray-400")= `${course.institution} (${course.startDate} - ${course.endDate})`

          //- Languages
          section#languages(class="mt-12")
            h2(class="text-2xl font-bold tracking-tight mb-6") Languages
            div(class="space-y-2")
              each lang in cv.languages
                div
                  h3(class="font-semibold")= lang.language
                  p(class="text-gray-400")= lang.fluency

    //- Contact Section
    footer#contact(class="bg-black mt-20 py-20 text-center")
      div(class="container mx-auto px-6")
        h2(class="text-3xl md:text-4xl font-bold tracking-tighter mb-6") Get in Touch
        p(class="text-lg text-gray-400 mb-8") You can reach me via email or find me on social media.
        if cv.meta.resumeUrl
          a(href=cv.meta.resumeUrl, target="_blank", class="bg-blue-600 text-white font-bold py-3 px-6 rounded-lg hover:bg-blue-700 transition-colors text-lg inline-block mb-8") Download Resume
        div(class="flex justify-center gap-6 mt- flex-wrap")
          each profile in cv.basics.profiles
            a(href=profile.url, target="_blank", rel="noopener noreferrer", class="text-gray-400 hover:text-white transition-colors text-2xl")
              i(class="fab fa-#{profile.iconMame}")= profile.network
        if cv.meta.credits
          div(class="text-sm text-gray-600 mt-12")
            each credit in cv.meta.credits
              span.px-2
                if credit.url
                  a(href=credit.url, target="_blank", class="hover:underline")= credit.name
                else
                  = credit.name

    //- Font Awesome for social icons
    script(src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous")
    //- Sticky Header & TOC Scroll Logic
    script.
      // Sticky Section Header & TOC logic
      (function() {
        const sectionIds = ['about', 'experience', 'projects', 'volunteer', 'testimonials', 'contact'];
        const sectionTitles = {
          about: 'About Me',
          experience: 'Work Experience',
          projects: 'Personal Projects',
          volunteer: 'Volunteer',
          testimonials: 'Testimonials',
          contact: 'Get in Touch',
        };
        const header = document.getElementById('sticky-section-header');
        const headerH2 = header ? header.querySelector('h2') : null;
        const toc = document.getElementById('toc');
        const tocLinks = document.querySelectorAll('.toc-link');
        const heroSection = document.getElementById('home');
        let lastSection = null;
        let tocWasShown = false;
        function isHeroOutOfView() {
          if (!heroSection) return false;
          const rect = heroSection.getBoundingClientRect();
          return rect.bottom <= 80;
        }
        function isAtPageBottom() {
          return (window.innerHeight + window.scrollY) >= (document.body.offsetHeight - 2);
        }
        function onScroll() {
          let current = sectionIds[0];
          for (const id of sectionIds) {
            const el = document.getElementById(id);
            if (el) {
              const rect = el.getBoundingClientRect();
              if (rect.top <= 80) {
                current = id;
              }
            }
          }
          // If at page bottom, always highlight 'contact'
          if (isAtPageBottom()) {
            current = 'contact';
          }
          // Show/hide sticky header for < 1536px only after hero is out of view
          if (header && headerH2) {
            if (window.innerWidth < 1536 && isHeroOutOfView()) {
              headerH2.textContent = sectionTitles[current];
              header.classList.remove('opacity-0', 'translate-y-[-100%]');
              header.classList.add('opacity-100', 'translate-y-0');
            } else {
              header.classList.add('opacity-0', 'translate-y-[-100%]');
              header.classList.remove('opacity-100', 'translate-y-0');
            }
          }
          // Show/hide TOC for >= 1536px only after hero is out of view
          if (toc) {
            if (window.innerWidth >= 1536 && isHeroOutOfView()) {
              toc.classList.remove('opacity-0', 'pointer-events-none');
              toc.classList.add('opacity-100');
              tocWasShown = true;
            } else {
              toc.classList.add('opacity-0', 'pointer-events-none');
              toc.classList.remove('opacity-100');
            }
          }
          // Highlight TOC links
          if (lastSection !== current) {
            lastSection = current;
            tocLinks.forEach(link => {
              if (link.dataset.section === current) {
                link.classList.add('text-blue-400', 'font-bold', 'toc-active');
              } else {
                link.classList.remove('text-blue-400', 'font-bold', 'toc-active');
              }
            });
          }
        }
        window.addEventListener('scroll', onScroll, { passive: true });
        window.addEventListener('resize', onScroll);
        window.addEventListener('DOMContentLoaded', () => {
          // Hide TOC on load
          if (toc) {
            toc.classList.add('opacity-0', 'pointer-events-none', 'invisible');
            toc.classList.remove('opacity-100');
            toc.style.animation = 'none';
          }
          setTimeout(() => {
            if (toc) toc.classList.remove('invisible');
            onScroll();
          }, 200);
        });
      })();
    style.
      /* Sticky Section Header Animations */
      #sticky-section-header {
        pointer-events: none;
        opacity: 0;
        transform: translateY(-100%);
      }
      #sticky-section-header.opacity-100 {
        opacity: 1;
        transform: translateY(0);
        pointer-events: auto;
      }
      /* TOC Animations & Highlight */
      @media (min-width: 1536px) {
        #toc {
          display: flex;
          animation: fade-in-toc 0.7s cubic-bezier(0.4,0,0.2,1);
          background: linear-gradient(120deg, #0f172aee 60%, #1e293bee 100%);
          border-right: 2px solid #33415599;
          box-shadow: none;
          backdrop-filter: blur(8px);
        }
        @keyframes fade-in-toc {
          from { opacity: 0; transform: translateX(-40px); }
          to { opacity: 1; transform: translateX(0); }
        }
        .toc-link.toc-active {
          color: #60a5fa !important; /* blue-400 */
          font-weight: 700;
          background: linear-gradient(90deg, #1e293b 60%, #2563eb22 100%);
          border-radius: 0.5rem;
        }
        .toc-link.toc-active::before {
          content: '';
          position: absolute;
          left: -10px;
          top: 50%;
          transform: translateY(-50%);
          width: 4px;
          height: 28px;
          border-radius: 6px;
          background: linear-gradient(180deg, #3b82f6 0%, #2563eb 100%);
          box-shadow: 0 0 8px #3b82f6cc;
          transition: all 0.3s;
        }
        .toc-link {
          position: relative;
          transition: color 0.2s, background 0.2s;
        }
        .toc-link:hover {
          color: #93c5fd;
          background: #1e293b44;
        }
        #toc.opacity-0 {
          opacity: 0;
          pointer-events: none;
        }
        #toc.opacity-100 {
          opacity: 1;
          pointer-events: auto;
        }
        /* Main content wrapper: allow space for sidebar, prevent overflow */
        .main-content-wrapper {
          max-width: 1100px;
          margin-left: calc(15rem + 2vw);
          margin-right: auto;
          box-sizing: border-box;
          overflow-x: visible;
        }
        body {
          overflow-x: hidden;
        }
      }
      /* For screens < 1536px, center content with normal padding, no sidebar space needed */
      @media (max-width: 1535px) {
        .main-content-wrapper {
          margin-left: auto !important;
          margin-right: auto !important;
          max-width: 1100px !important;
          padding-left: 2em !important;
          padding-right: 2em !important;
        }
      }
      /* Make hero text pop even more with layered, deeper drop shadows and subtle highlight */
      header#home h1,
      header#home h2,
      header#home p,
      header#home nav a {
        text-shadow:
          0 6px 32px rgba(16,32,64,0.55),
          0 2px 8px rgba(30,58,138,0.35),
          0 1px 0 rgba(0,0,0,0.22),
          0 0 2px #fff2;
      }
      header#home h1 {
        text-shadow:
          0 10px 40px rgba(30,58,138,0.75),
          0 4px 24px rgba(16,32,64,0.55),
          0 2px 8px rgba(0,0,0,0.28),
          0 0 4px #fff4;
      }
      header#home h2 {
        text-shadow:
          0 6px 24px rgba(30,58,138,0.65),
          0 2px 8px rgba(16,32,64,0.45),
          0 1.5px 6px rgba(0,0,0,0.22),
          0 0 2px #fff3;
      }
      header#home p {
        text-shadow:
          0 4px 18px rgba(16,32,64,0.45),
          0 1.5px 6px rgba(0,0,0,0.18),
          0 0 1px #fff2;
      }
      header#home nav a {
        text-shadow:
          0 2px 12px rgba(16,32,64,0.45),
          0 1px 0 rgba(0,0,0,0.18),
          0 0 1px #fff2;
      }
      /* Jump to Top Button */
      #jump-to-top-btn {
        position: fixed;
        bottom: 2.5rem;
        right: 2.5rem;
        z-index: 50;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 3.5rem;
        height: 3.5rem;
        background: linear-gradient(135deg, #2563eb 60%, #1e3a8a 100%);
        color: #fff;
        border-radius: 9999px;
        box-shadow: 0 6px 32px rgba(16,32,64,0.25), 0 2px 8px rgba(30,58,138,0.18);
        opacity: 0;
        pointer-events: none;
        transition: opacity 0.4s, transform 0.3s;
        transform: translateY(40px) scale(0.95);
        font-size: 2rem;
        border: none;
        outline: none;
        cursor: pointer;
      }
      #jump-to-top-btn.visible {
        opacity: 1;
        pointer-events: auto;
        transform: translateY(0) scale(1);
      }
      #jump-to-top-btn:hover {
        background: linear-gradient(135deg, #1e40af 60%, #2563eb 100%);
        box-shadow: 0 8px 40px #2563eb55, 0 2px 8px #1e3a8a33;
      }
      #jump-to-top-btn svg {
        width: 1.5em;
        height: 1.5em;
        display: block;
      }
      /* Jump to Top Button: always visible on all screen widths */
      #jump-to-top-btn {
      }
      /* Responsive: ensure button is always visible and not hidden by media queries */
      @media (max-width: 640px) {
        #jump-to-top-btn {
          bottom: 1.2rem;
          right: 1.2rem;
          width: 2.7rem;
          height: 2.7rem;
          font-size: 1.4rem;
        }
      }

    body(class="bg-gray-900 text-gray-100 font-sans")
      // ...existing code...
      //- Jump to Top Button
      button#jump-to-top-btn(type="button" aria-label="Jump to top")
        svg(xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor")
          path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7")

    //- Scripts
    script.
      // ...existing code...
      // Jump to Top Button logic
      (function() {
        const btn = document.getElementById('jump-to-top-btn');
        function onScroll() {
          if (!btn) return;
          // Show after scrolling 0.5x viewport height
          if (window.scrollY > window.innerHeight * 0.5) {
            btn.classList.add('visible');
          } else {
            btn.classList.remove('visible');
          }
        }
        window.addEventListener('scroll', onScroll, { passive: true });
        window.addEventListener('resize', onScroll);
        if (btn) {
          btn.addEventListener('click', function() {
            window.scrollTo({ top: 0, behavior: 'smooth' });
          });
        }
      })();
