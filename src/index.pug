doctype html
html(lang="en" class="dark")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title= `${cv.basics.name} | ${cv.basics.label}`
    link(rel="stylesheet", href="styles.css")
    //- Use built custom.css in both local and production, since build.ts now copies it to dist/
    link(rel="stylesheet", href="custom.css")
    //- Font Awesome CDN for reliable icon rendering
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css")
    link(rel="preconnect", href="https://fonts.googleapis.com")
    link(rel="preconnect", href="https://fonts.gstatic.com", crossorigin)
    link(href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&family=Montserrat:wght@700&display=swap", rel="stylesheet")
    meta(name="description", content="Diego Salazar – Software Engineer, Full Stack Developer, and AI Enthusiast. Portfolio, resume, and contact information.")
    meta(property="og:title", content="Diego Salazar | Software Engineer Portfolio")
    meta(property="og:description", content="Diego Salazar – Software Engineer, Full Stack Developer, and AI Enthusiast. Portfolio, resume, and contact information.")
    meta(property="og:type", content="website")
    meta(property="og:url", content="https://diegosalazar.dev/")
    meta(property="og:image", content="https://diegosalazar.dev/og-image.png")
    meta(name="twitter:card", content="summary_large_image")
    meta(name="twitter:title", content="Diego Salazar | Software Engineer Portfolio")
    meta(name="twitter:description", content="Diego Salazar – Software Engineer, Full Stack Developer, and AI Enthusiast. Portfolio, resume, and contact information.")
    meta(name="twitter:image", content="https://diegosalazar.dev/og-image.png")

  body(class="bg-gray-900 text-gray-100 font-sans" aria-label="Diego Salazar Portfolio")
    //- Accessibility: Add nav landmarks and aria-labels
    nav(aria-label="Main navigation")
      include sections/sticky-header.pug
    nav(aria-label="Table of contents")
      include sections/toc.pug
    //- Header & Hero Section
    main(id="main-content" tabindex="-1")
      include sections/hero.pug
    //- Main Content Wrapper
    div(class="main-content-wrapper container mx-auto px-4 sm:px-6 py-20 transition-all duration-500" style="max-width:1100px;margin-left:auto;margin-right:auto;" 2xl:style="max-width:1100px;margin-left:calc(15rem + 2vw);margin-right:auto;")
      div(class="lg:grid lg:grid-cols-3 lg:gap-12")
        //- Left/Main Column
        main(class="lg:col-span-2")
          //- About Section
          section#about
            h2(class="text-3xl md:text-4xl font-bold tracking-tighter mb-6") About Me
            div(class="prose prose-invert prose-lg max-w-none text-left")
              each para in cv.basics.summary
                p= para

          //- Experience Section
          section#experience(class="mt-20")
            h2(class="text-3xl md:text-4xl font-bold tracking-tighter mb-12") Work Experience
            div(class="relative border-l-2 border-gray-700 pl-8")
              each job, index in cv.work
                div(class="mb-12")
                  span(class="absolute -left-3 flex items-center justify-center w-6 h-6 bg-blue-600 rounded-full")
                    span(class="w-3 h-3 bg-white rounded-full")
                  h3(class="text-2xl font-bold")= job.position
                  p(class="text-lg text-gray-400")= `${job.name} | ${job.startDate} - ${job.endDate}`
                  if job.summary
                    p(class="mt-2 text-gray-300")= job.summary
                  if job.highlights
                    ul(class="list-disc list-inside mt-2 text-gray-300")
                      each highlight in job.highlights
                        li= highlight

          //- Projects Section
          section#projects(class="mt-20")
            h2(class="text-3xl md:text-4xl font-bold tracking-tighter mb-12") Personal Projects
            div(class="grid grid-cols-1 md:grid-cols-2 gap-8")
              each project in cv.projects
                div(class="bg-gray-800 rounded-lg overflow-hidden transform transition-transform hover:scale-105 shadow-lg flex flex-col")
                  if project.images && project.images.length > 0
                    img(src=project.images[0], alt=project.name, class="w-full h-48 object-cover")
                  div(class="p-6 flex flex-col flex-grow")
                    h3(class="text-xl font-bold")= project.name
                    p(class="text-gray-400 mt-2 flex-grow")= project.summary
                    div(class="mt-4")
                      if project.url
                        a(href=project.url, target="_blank", rel="noopener noreferrer", class="text-blue-400 hover:underline mr-4") View Project
                      if project.githubUrl
                        a(href=project.githubUrl, target="_blank", rel="noopener noreferrer", class="text-blue-400 hover:underline") View on GitHub

          //- Volunteer Section
          if cv.volunteer && cv.volunteer.length
            section#volunteer(class="mt-20")
              h2(class="text-3xl md:text-4xl font-bold tracking-tighter mb-12") Volunteer
              div(class="space-y-8")
                each vol in cv.volunteer
                  div(class="bg-gray-800 p-6 rounded-lg shadow-lg")
                    h3(class="text-2xl font-bold mb-2 flex items-center gap-2")
                      if vol.url
                        a(href=vol.url, target="_blank", rel="noopener noreferrer", class="text-blue-400 hover:underline")= vol.organization
                      else
                        = vol.organization
                      if vol.position
                        span(class="text-base text-gray-400 font-medium ml-2")= `– ${vol.position}`
                    if vol.summary
                      p(class="text-gray-300 mt-2")= vol.summary

          //- Testimonials Section
          section#testimonials(class="mt-20")
            h2(class="text-3xl md:text-4xl font-bold tracking-tighter mb-12") Testimonials
            div(class="space-y-8")
              each ref in cv.references
                div(class="bg-gray-800 p-6 rounded-lg shadow-lg transition-transform transform hover:scale-105")
                  blockquote(class="border-l-4 border-blue-500 pl-4")
                    p(class="text-gray-300 italic")= ref.reference
                    footer(class="mt-4")
                      cite(class="font-bold not-italic")= ref.name
                      if ref.title
                        span(class="text-gray-400")= `, ${ref.title}`

        //- Right/Sidebar Column
        aside(class="lg:col-span-1 mt-20 lg:mt-0")
          //- Skills Section
          section#skills
            h2(class="text-2xl font-bold tracking-tight mb-6") Skills
            if cv.skills.summary
              p(class="text-gray-400 mb-6")= cv.skills.summary
            div(class="flex flex-wrap gap-2")
              each skill in cv.skills.sets
                - let colorClass = '';
                if (skill.name === 'Typescript')
                  - colorClass = 'bg-blue-700 text-white';
                else if (skill.name === 'React')
                  - colorClass = 'bg-cyan-600 text-white';
                else if (skill.name === 'Python')
                  - colorClass = 'bg-yellow-400 text-gray-900';
                else if (skill.name === 'Ruby on Rails')
                  - colorClass = 'bg-red-600 text-white';
                else if (skill.name === 'HTML5, CSS3, SASS')
                  - colorClass = 'bg-pink-500 text-white';
                else if (skill.name === 'LLMs/Prompt Engineering')
                  - colorClass = 'bg-purple-700 text-white';
                else if (skill.name === 'PostgreSQL, MySQL')
                  - colorClass = 'bg-emerald-700 text-white';
                else if (skill.name === 'Elixir')
                  - colorClass = 'bg-violet-700 text-white';
                else
                  - colorClass = 'bg-gray-700 text-white';
                span(class=`${colorClass} px-3 py-1 rounded-full text-sm shadow-md font-semibold transition-all duration-200`) #{skill.name}
            if cv.meta.resumeUrl
              div(class="mt-7")
                a(href=cv.meta.resumeUrl, target="_blank", class="bg-blue-600 text-white font-bold py-3 px-6 rounded-lg hover:bg-blue-700 transition-colors text-lg inline-block shadow-lg") Download Resume
            div(class="mt-8 flex flex-wrap items-center gap-4")
              each profile in cv.basics.profiles
                if profile.network === 'Stack Overflow' && profile.flair
                  a(href=profile.url, target="_blank")
                    img(src=profile.flair, alt="Stack Overflow Flair")
                if profile.network === 'Codewars' && profile.badge
                  a(href=profile.url, target="_blank")
                    img(src=profile.badge, alt="Codewars Badge")

          //- Education
          section#education(class="mt-12")
            h2(class="text-2xl font-bold tracking-tight mb-6") Education
            div(class="space-y-4")
              each course in cv.education
                div
                  h3(class="font-semibold")= course.area
                  p(class="text-gray-400")= `${course.institution} (${course.startDate} - ${course.endDate})`

          //- Languages
          section#languages(class="mt-12")
            h2(class="text-2xl font-bold tracking-tight mb-6") Languages
            div(class="space-y-2")
              each lang in cv.languages
                div
                  h3(class="font-semibold")= lang.language
                  p(class="text-gray-400")= lang.fluency

    //- Contact Section
    include sections/contact.pug
    //- Jump to Top Button
    include sections/jump-to-top-btn.pug
    script(src="main.js")
    //- TODO: Blog/articles section in the future
    //- TODO: Add privacy-friendly analytics (see custom.css for reduced motion)
    //- Theme toggle button (light/dark mode)
    button.theme-toggle(type="button" aria-label="Toggle light/dark mode")
      span.theme-toggle-label Dark Mode
    script.
      // Theme toggle logic
      (function() {
        var btn = document.querySelector('.theme-toggle');
        var label = btn && btn.querySelector('.theme-toggle-label');
        function setTheme(light) {
          document.body.classList.toggle('light', light);
          btn.classList.toggle('light', light);
          localStorage.setItem('theme', light ? 'light' : 'dark');
          if (label) label.textContent = light ? 'Dark Mode' : 'Light Mode';
        }
        btn && btn.addEventListener('click', function() {
          setTheme(!document.body.classList.contains('light'));
        });
        // On load, set theme from localStorage or system
        var saved = localStorage.getItem('theme');
        if (saved === 'light' || (saved === null && window.matchMedia('(prefers-color-scheme: light)').matches)) {
          setTheme(true);
        } else {
          setTheme(false);
        }
      })();
